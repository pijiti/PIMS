tr

        td.user = @prescription.try(:code)
        td = "#{@prescription.patient.try(:firstname)} #{@prescription.patient.try(:surname)}"
        td = "Dr. #{@prescription.doctor.try(:first_name)} #{@prescription.doctor.try(:last_name)}"
        td.hospital = @prescription.hospital_unit.try(:name  )
        td.code = @prescription.prescription_date.strftime("%d/%m/%Y at %I:%M%p")
        td = "N #{@prescription.total}"
        /td.batch = prescription.try(:batches).try(:size)
        td
          table.table.table-striped.table-condensed
                  thead
                          tr
                            th Store
                            th Brand
                            th Units
                            th Collate
                  tbody
                    - @prescription.prescription_batches.each do |p|
                      tr
                        td
                          = p.store.name
                        td
                          = p.brand.drug_prescription_info
                        td
                          = p.qty
                        td
                           - if ![ "COLLATION COMPLETED"].include? @prescription.status
                              a href="#" data-toggle="modal" data-target="#myModal_#{p.id}"  Collate
                              = form_for(p , :url => complete_collation_prescription_path(@prescription) , :method => :post ) do |f|
                                 div[id="myModal_#{p.id}" class="modal modal-approvals" aria-labelledby="myModalLabel" role="dialog" tabindex="-1"]
                                   .modal-dialog role="document"
                                     .modal-content
                                       .modal-header
                                         button.close.approval-close aria-label="Close" data-dismiss="modal" type="button"
                                           span aria-hidden="true"  &times;
                                         h4#myModalLabel.modal-title Collation of #{p.qty} units of #{p.brand.drug_prescription_info} from #{p.store.name}
                                       .modal-body
                                           table.table.table-striped.table-condensed.batches.batches_modal_table.data_table
                                                 thead
                                                    tr
                                                      th Brand
                                                      th Batch number
                                                      th Rate
                                                      th Available Units(Packs)
                                                      th Rate per unit
                                                      th Mfd Date
                                                      th Expiry Date
                                                      th Allot

                                                 tbody
                                                   - InventoryBatch.includes(:batch).where(:expired => nil, :inventory => Inventory.where(:brand_id => p.brand_id , :store=> p.store)).each do |inventory_batch|
                                                    - next if inventory_batch.units.to_i == 0
                                                    - batch = inventory_batch.batch
                                                        /= f.simple_fields_for :batches , batch do |batch_form|
                                                    tr
                                                      td = batch.brand.drug_prescription_info
                                                      td = batch.batch_number
                                                      td = batch.rate
                                                      td = "#{inventory_batch.units}(#{inventory_batch.units/batch.brand.pack_size.to_i})"
                                                      td
                                                         = batch.rate / batch.brand.pack_size.to_f
                                                      td = batch.mfd_date.strftime("%d/%m/%Y")
                                                      td = batch.expiry_date.strftime("%d/%m/%Y")
                                                      td
                                                         /= batch_form.input :allot , label: false
                                                         /= batch_form.hidden_field :inventory_batch_id , :value => inventory_batch.id
                                                         /= batch_form.hidden_field :store_id , :value => s.from_store.id

                                                      /td = link_to  'Approve', submitted_item_approval_path( batch)
                                                      /td = link_to  'Disapprove', submitted_item_approval_path( batch)

                                       .modal-footer
                                         = f.submit :class => "btn-sm btn btn-success" , :value => "Complete allotment"

        td = @prescription.status