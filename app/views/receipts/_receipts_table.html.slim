table.table#receipts_data_table
  thead
        tr.data-rows
           th Order Code
           th Items
           th From Store
           th Receiving Store
           th Status
           th Confirm
  tbody
   - unless @orders.blank?
     - @orders.each do |order|
      tr.data-rows
          td = order.number
          td
            table.table.table-striped.table-condensed.receiptsDataTable
              tr
                th Drug
                th Units
              tbody
                - order.receipts.includes(batch: [:pharm_item]).order('pharm_items.name ASC').each do |r|
                  tr
                    td = r.batch.pharm_item.try(:name)
                    td = r.qty

          td = order.receipts.last.try(:from_store).try(:name)
          td = order.receipts.last.try(:to_store).try(:name)
          /td = s.batch.brand.detailed_info
          td = (order.status == "SERVICE_COMPLETE" ? "AWAITING CONFIRMATION" : "COMPLETED")
          td
             - if(order.status == "SERVICE_COMPLETE" )
               /and ((can? :manage , :all ) or order.ordered_by == current_user )
               a href="#" data-toggle="modal" data-target="#requests_#{order.id}"  Confirm
               = simple_form_for(order, :url => confirm_receipts_path , :method => :post ) do |f|
                     =f.hidden_field :id , :value => order.id
                     /! Modal
                     div[id="requests_#{order.id}" class="modal modal-approvals" aria-labelledby="myModalLabel" role="dialog" tabindex="-1"]
                       .modal-dialog role="document"
                         .modal-content
                           .modal-header
                             button.close.approval-close aria-label="Close" data-dismiss="modal" type="button"
                               span aria-hidden="true"  &times;
                             h4#myModalLabel.modal-title Confirm the delivery of #{order.number}  ?
                           .modal-body
                               table.table.table-striped.table-condensed.batches.batches_modal_table
                                     thead
                                        tr
                                          th Brand
                                          th Batch No
                                          th Rate
                                          th Units(Packs)
                                          th Rate per unit
                                          th Mfd Date
                                          th Expiry Date
                                          th Received Qty
                                          th If drugs lost, reason
                                          th Comments



                                     tbody
                                       - order.receipts.includes(batch: [:brand]).order('brands.name ASC').each do |s|
                                          = f.simple_fields_for :receipts , s do |ff|
                                              -  batch = s.batch
                                              - s.received_qty = s.qty
                                              tr[class="#{highlight_batch(batch)} " ]
                                                  td = batch.brand.detailed_info
                                                  td = batch.batch_number
                                                  td = batch.rate
                                                  td = "#{s.qty}(#{pack_and_units(s.qty,batch.brand.pack_size.to_i)})"
                                                  td = "%.2f" % (batch.rate / batch.brand.pack_size.to_f)
                                                  td = batch.mfd_date.strftime("%d/%m/%Y")
                                                  td = batch.expiry_date.strftime("%d/%m/%Y")
                                                  td
                                                     = ff.input :received_qty ,label: false
                                                  td
                                                     = ff.input :lost_reason , collection: ["None" , "Lost" , "Stolen" , "Damaged"] , label: false
                                                  td
                                                     = ff.input :comments , label: false

                           .modal-footer
                             = f.submit :class => "btn-sm btn btn-success" , :value => "Confirm Delivery"