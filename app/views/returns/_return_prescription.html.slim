- @return_approvals.each do |return_approval|
  tr

    td.user
      - unless return_approval.prescription.blank?
        a tabindex="0" href="#" data-toggle="popover" data-html="true" data-trigger="focus" title="#{return_approval.prescription.try(:code)}" data-content="Doctor- Dr. #{return_approval.prescription.doctor.try(:first_name)}  #{return_approval.prescription.doctor.try(:last_name)} <br/> Hospital - #{return_approval.prescription.hospital_unit.try(:name)} <br/> Prescription date - #{return_approval.prescription.prescription_date.strftime("%d/%m/%Y")} <br/> Total - N #{ return_approval.prescription.total}"
          = return_approval.prescription.try(:code)

    td
      - unless return_approval.prescription.blank?
        a tabindex="0" href="#" data-toggle="popover" data-trigger="focus" title="#{return_approval.prescription.patient.try(:firstname)} #{return_approval.prescription.patient.try(:surname)}" data-html="true" data-content="Hospital number - #{return_approval.prescription.patient.try(:hospital_number)} <br/> Mobile - #{return_approval.prescription.patient.try(:mobile)} <br/> Age - #{return_approval.prescription.patient.try(:age)} <br/> Next of kin -  #{ return_approval.prescription.patient.try(:nok_name)} <br/>  Next of kin mobile - #{return_approval.prescription.patient.try(:nok_mobile)}"
          = "#{return_approval.prescription.patient.try(:firstname)} #{return_approval.prescription.patient.try(:surname)}"
    /td.batch = prescription.try(:batches).try(:size)
    td
      table.table.table-striped.table-condensed
        thead
          tr
            th Store
            th.text-center Brand
            th Batch number
            th Expiry date
            th Total Units
            th Returned Units
        tbody
          / = simple_form_for(return_approval.prescription, :url => complete_dispense_prescription_path(return_approval.prescription), :method => :post) do |f|
          - rf_amount = 0
          - return_approval.return_prescription_batches.each do |rpb|
              - rf_amount += rpb.rate.to_f * rpb.qty.to_i
              - rpb.return_collation_batches.each do |rcb|
                  - unless rcb.units.blank? or rcb.units == "0"
                    tr
                      td
                        = rpb.store.try(:name)
                      td
                        = rpb.brand.drug_prescription_info
                      td
                        = rcb.inventory_batch.batch.batch_number
                      td
                        = rcb.inventory_batch.batch.expiry_date.strftime("%d/%m/%Y")
                      td
                        = rcb.collation_batch.units
                      td 
                        / = return_approval.return_prescription_batches.where(brand_id: rpb.brand_id).try(:last).try(:qty)
                        = rcb.units

    td
      = return_approval.try(:prescription).try(:subtotal)
    td
      / = return_approval.prescription.refunded_amount
      = "%.2f" % rf_amount.to_f
    td
      = return_approval.try(:user).try(:first_name)
    td
      = return_approval.try(:store).try(:name)  
    td
      - if !return_approval.approved
        / - if return_approvaleturn_approval.prescription.status == "DISPENSED" and  return_approvaleturn_approval.prescription.refunded_amount == "0"
        = link_to "Approve ?", approve_return_return_path(id: return_approval), data: {confirm: 'Are you sure you want to approve ?'}, class: "btn-sm btn btn-success"
      - else
        = "Approved"